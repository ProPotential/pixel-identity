<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <UserSecretsId>Pixel.Identity.UI.Server-DBF95824-61B9-4155-ABD3-07F68D78DC36</UserSecretsId>
    <RootNamespace>Pixel.Identity.Provider</RootNamespace>
    <AssemblyName>Pixel.Identity.Provider</AssemblyName>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerfileContext>..\..</DockerfileContext>
    <DockerComposeProjectPath>..\..\docker-compose.dcproj</DockerComposeProjectPath>
    <BaseOutputPath>..\..\.builds\Identity</BaseOutputPath>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="12.0.1" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="12.0.1" />
    <PackageReference Include="MailKit" Version="4.3.0" />
    <PackageReference Include="McMaster.NETCore.Plugins.Mvc" Version="1.4.0" />
    <PackageReference Include="OpenIddict.AspNetCore" Version="5.0.1" />
    <PackageReference Include="OpenIddict.Quartz" Version="5.0.1" />
    <PackageReference Include="Quartz.Extensions.Hosting" Version="3.8.0" />
    <PackageReference Include="MudBlazor" Version="6.12.0" />
    <PackageReference Include="Serilog.AspNetCore" Version="8.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="6.5.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Negotiate" Version="8.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.Server" Version="8.0.0" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="8.0.0" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Pixel.Identity.Core\Pixel.Identity.Core.csproj" />
    <ProjectReference Include="..\Pixel.Identity.Shared\Pixel.Identity.Shared.csproj" />
    <ProjectReference Include="..\Pixel.Identity.UI.Client\Pixel.Identity.UI.Client.csproj" />
  </ItemGroup>
  <!--Build the plugins project with their outputpath set to $(TargetDir)\Plugins\....-->
  <Target Name="BuildPlugins" AfterTargets="Build">
    <ItemGroup>
      <DbStorePluginProject Include="..\Pixel.Identity.Store.Mongo\Pixel.Identity.Store.Mongo.csproj" />
      <DbStorePluginProject Include="..\Pixel.Identity.Store.SqlServer\Pixel.Identity.Store.SqlServer.csproj" />
      <DbStorePluginProject Include="..\Pixel.Identity.Store.PostgreSQL\Pixel.Identity.Store.PostgreSQL.csproj" />
    </ItemGroup>
    <ItemGroup>
      <MessengerPluginProject Include="..\Pixel.Identity.Messenger.Email\Pixel.Identity.Messenger.Email.csproj" />
      <MessengerPluginProject Include="..\Pixel.Identity.Messenger.Console\Pixel.Identity.Messenger.Console.csproj" />
    </ItemGroup>
    <MSBuild RebaseOutputs="true" Projects="@(DbStorePluginProject)" Targets="Build" Properties="OutputPath=$(TargetDir)Plugins\DbStore\%(FileName)\" />
    <MSBuild RebaseOutputs="true" Projects="@(MessengerPluginProject)" Targets="Build" Properties="OutputPath=$(TargetDir)Plugins\Messenger\%(FileName)\" />
  </Target>
  <!--On publish add additional step to copy the plugins folder from build\plugins to publish\plugins-->
  <Target Name="CopyPlugins" AfterTargets="BuildPlugins">
    <ItemGroup>
      <PluginFiles Include="$(TargetDir)\Plugins\**\*.*" />
    </ItemGroup>
    <MakeDir Directories="$(PublishDir)\Plugins" />
    <Copy SourceFiles="@(PluginFiles)" DestinationFiles="@(PluginFiles -> '$(PublishDir)\\Plugins\\%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>
</Project>
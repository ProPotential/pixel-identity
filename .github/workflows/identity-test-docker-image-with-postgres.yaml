name: Test docker image with postgres backend

on: [workflow_call]

jobs:  
  
  test-with-postgres-db: 
   runs-on: ubuntu-latest
   strategy:
      matrix:
        dotnet-version: [ '8.0.x' ]

   services:
     postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgresadmin
          POSTGRES_PASSWORD: postgrespass
          POSTGRES_DB: pixel_identity_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
   steps:  
     - name: Checkout Repository
       uses: actions/checkout@v3   
     - name: Download and load docker image
       uses: ishworkh/docker-image-artifact-download@v1
       with:
        image: "pixel-identity:local"
     - name: Launch docker image
       run: >
         docker run -d -p 44382:8080 --network=${{ job.container.network }}
         -e AllowedOrigins=http://localhost:44382 -e IdentityHost=http://localhost:44382/pauth
         --env-file ./.config/identity-postgres-with-console-email.env
         --name pixel_identity_provider pixel-identity:local 
     - name: Print container details
       run: docker container ls     
     - name: Setup dotnet ${{ matrix.dotnet-version }}
       uses: actions/setup-dotnet@v2
       with:
        dotnet-version: ${{ matrix.dotnet-version }}    
     - name: Build test project     
       run: dotnet build src/Pixel.Identity.UI.Tests/Pixel.Identity.UI.Tests.csproj
     - name: print container logs
       run: docker logs pixel_identity_provider
     - name: Install browsers
       run: pwsh src/Pixel.Identity.UI.Tests/bin/Debug/net8.0/playwright.ps1 install
     - name:  Execute tests
       run: dotnet test  --logger "trx;" src/Pixel.Identity.UI.Tests/Pixel.Identity.UI.Tests.csproj
     - name: Upload test results
       uses: actions/upload-artifact@v3
       with:
        name: pixel-identity-postgres-automation-test-results-${{ matrix.os }}
        path: src/Pixel.Identity.UI.Tests/TestResults/*.trx  

   